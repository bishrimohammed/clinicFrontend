import{u as d}from"./useQuery-0c7d53ac.js";import{A as c}from"./axiosInstance-8e812653.js";import{d as o,l as i,Q as r,m}from"./index-adc5c439.js";import{u}from"./useMutation-46d3959e.js";import{A as y}from"./useAxiosHeaders-0302b736.js";function f(){return d({queryKey:["LabCategory"],queryFn:async()=>c.get("/service/getLabServiceCategories").then(e=>e.data),staleTime:60*24*60*1e3})}const L=()=>{const e=o(),a=y(),t=i();return u({mutationFn:async s=>c.post("/service/createLabService",s,{...a}),onSuccess:async()=>{r.success("Added succeessfully"),t.invalidateQueries({queryKey:["lab services"],exact:!0}),e("/administrations/services")},onError:async s=>{r.error(s.response.data.message,{})}})},S=()=>{const e=o(),{labId:a}=m();console.log(a);const t=y(),s=i();return u({mutationFn:async n=>c.put(`/service/${a}/updateLabService`,n,{...t}),onSuccess:async()=>{r.success("successfully updated",{}),s.invalidateQueries({queryKey:["lab services"],exact:!0}),e("/administrations/services")},onError:async n=>{r.error(n.response.data.message,{})}})};export{L as a,S as b,f as u};
